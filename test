#!/usr/bin/env ruby
LIB_DIR = File.join(__dir__, 'lib')
$LOAD_PATH.unshift(LIB_DIR) unless $LOAD_PATH.include? LIB_DIR

require 'brain'

n = Neural::Neuron.new(learning_rate: 0.001)
x = Neural::Input.new(n)
y = Neural::Input.new(n)

brain = Neural::Brain.new( 
  inputs: { x: x, y: y },
  neurons: { n: n }
)

def line(x)
  y = 2 * x + 3
end

def above?(x,y)
  y > line(x)
end

class Average < Array
  def <<(value)
    shift if count > 50
    super(value)
  end

  def average
    reduce(&:+) / count
  end
end

a = Average.new

iteration = 0
record = 0
loop do
  iteration += 1
  x = rand(-25..25)
  y = rand(-25..25)
  is_above = above?(x,y)
  brain.perceive(x: x, y: y)
  guess = brain.neurons[:n].value > 0.5
  correct = is_above && guess || !is_above && !guess
  record += 1 if correct
  error = brain.neurons[:n].learn(is_above ? 1 : 0)

  print "\r[#{x}, #{y}]".ljust 15
  print " "
  print "(#{((record.to_f / iteration) * 100).to_i}%)".ljust 6
  print is_above ? '[above]' : '[below]'
  print ' '
  print guess ? '[above]' : '[below]'
  print ' '
  print correct ? 'Correct' : 'Wrong'
  print '               '
end
